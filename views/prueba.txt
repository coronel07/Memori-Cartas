ejs
const express = require('express');
const bodyParser = require('body-parser');
const morgan = require('morgan');
const path = require('path');
const ejs = require('ejs');
const app = express();
const port = 2500;

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

/* MIDDLEWARES */
app.use(morgan('dev'));
app.use(express.json());

//Configurando archivos est치ticos
app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
    res.render("index");

});

const contarTiempo = (segundos) => new Promise(resolve => setTimeout(resolve, segundos * 1000));
// Ejemplo de uso:
contarTiempo(5).then(() => console.log(`Han pasado 5 segundos`));

app.listen(port, () => {
    console.log(`Example app listening on port ${port}`);
});


css
body{
	background-color: bisque;
}
/* Define un contenedor flex para el contenido */
.contenido {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
}

/* Define un estilo para los elementos interiores */
.inner1{
	display: flex;
	align-items: center;
	margin: 5px;
	flex: 1;
	min-width: 150px;
	background: cornflowerblue;
	padding: 20px;
	border: 1px solid black;
	flex-direction: row; 
}
.medio{
	display: flex;
	align-items: center;
	margin: 5px;
	flex: 0,5;
	background: greenyellow;
	border: 1px solid black;
	flex-direction: row; 
	border-radius: 10px;
}

.inner2{
	display: flex;
	align-items: center;
	margin: 5px;
	flex: 1;
	min-width: 150px;
	background: crimson;
	padding: 20px;
	border: 1px solid black;
	flex-direction: row; 
}

/* Agrega estilos para la imagen del avatar */
.inner1 img {
	width: 50px;
	height: 50px;
	border-radius: 50%;
	margin-left: 15px;
}

.inner2 img {
	width: 50px;
	height: 50px;
	border-radius: 50%;
	margin-left: 15px;
}

/* Agrega estilos para la informaci칩n del avatar */
.avatar-info {
	display: flex;
	flex-direction: column;
}

.avatar-info h2 {
	margin: 0;
}

.avatar-info p {
	margin: 5px 0 0 0;
	font-size: 14px;
}

/* Define un contenedor grid para el contenido */
main {
	max-width: max-content;
	padding: 1rem;
	margin: 0 auto;
	display: grid;
	grid-template-columns: 120px 120px 120px 120px 120px 120px;
	grid-template-rows: 154px 154px 154px 154px 154px;
	grid-gap: 10px;
}

/* Agrega estilos para las im치genes dentro del contenedor grid */
img {
	object-fit: cover;
	width: 100%;
	height: 100%;
	border-radius: 20px;
}

select {
	appearance: none;
	background-color: greenyellow;
	color: black;
	font-size: 16px;
	padding: 8px;
	width: 100px;
  }
  select:hover,
  select:focus {
	outline: none;
  }
  



  js

  const express = require('express');
const bodyParser = require('body-parser');
const morgan = require('morgan');
const path = require('path');
const ejs = require('ejs');
const app = express();
const port = 2500;

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

/* MIDDLEWARES */
app.use(morgan('dev'));
app.use(express.json());

//Configurando archivos est치ticos
app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
    res.render("index");

});

const contarTiempo = (segundos) => new Promise(resolve => setTimeout(resolve, segundos * 1000));
// Ejemplo de uso:
contarTiempo(5).then(() => console.log(`Han pasado 5 segundos`));

app.listen(port, () => {
    console.log(`Example app listening on port ${port}`);
});